La idea es sacar de un template HTML separarlo en pequeñas piezas que serian componentes
este template lo podriamos haber sacado de internet y estar editandolo nosotros
Ademas mantendremos un File Sistem Ordenado y estructurado
  En angular antes teniamos el archivo .module.ts, eso es algo que se va a dejar de usar porque ahora
  nuestros componentes por defecto crean un StandAlone Componente (Esto quiere decir que es un componente y a la vez un modulo)

  Aqui trabajaremos con varios componentes que se mostraran en conjunto o por separado

Creamos nuestros Modulos:
  * Seria la carpeta Gifs dentro de App (Esto seria como un modulo)
    Dentro tenemos las carpetas que se relacionan directamente a este componente:
  * Las demas carpetas tembien serian los diferentes modulos

Angular Environment y Path Alias
  Estamos manipulando el Dashboard pero que tal si este menu lo queremos dejar para que lo podamos reutilizar para otro proyecto
  pero no vamos a quierer meternos al codigo fuente y ver en que parte esta tal cosa del texto o del titulo
  Lo mejor es configurar una variable de entorno para esto no creamos un objeto en el cLI
    - ng g environments
    (Esto nos crea dentro del SRC la carpeta con los dos archivos uno para produccion y otro para desarrollo)


  Para el uso de las variables de entorno y no especificar toda la ruta
    Nos creamos dentro de la carpeta tsconfig.json le colocamos un alias a la ruta que era (../../../../)
    Con "baseUrl" le indicamos que tome el ROOT como la base de las rutas que vamos a defenir, despues definimos la ruta en Path
    la primera parte es el nombre del Alias y le indicamos la ruta a donde apunta

Giphy API

  Vamos a consumir el API de esta pagina para generar GIFS y usarlos en nuestra pagina consumiendo esta API
  Empezamos agregando el Token de acceso de la API y en la misma pagina accedemos al endpoint donde podremos ver las propiedades que obtendremos al consumir el endpoint
  pero si nuestra Aplicacion solo va a requerir unas pocas propiedades del monton que hay entonces nos creamos una interface que tenga solo esos elementos para que nuestra
  Aplicacion no se vea afecta si a futuro la pagina cambia algun nombre de las propiedades, Copiando la respuesta HTTP y en la pagina de "Ctrl+Ship+P -> Parse JSON as Code" obtenemos ya la interface en TS
  para tener el Tipado de la respuesta

  Vamos a hacer que se almacene donde dejo el scroll el usuario para que cuando salga y vuelva a entrar a la pagina, se mantenga el Scroll donde
  lo dejo, para esto ocupamos la referencia a todo el elemento que contiene los Gifs, eso seria el DIV principal que tenemos en "trending-page.component.html"
  porque este sabe el tamaño del elemento
